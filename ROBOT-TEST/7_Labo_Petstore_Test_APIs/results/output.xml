<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.2.2 (Python 3.13.3 on win32)" generated="2025-07-08T21:01:13.263590" rpa="false" schemaversion="5">
<suite id="s1" name="Petstore Api Tests" source="C:\Files\ISI-Dakar\Semestre_2\Qa_test\Qa_Test\ROBOT-TEST\7_Labo_Petstore_Test_APIs\testcases\petstore_api_tests.robot">
<kw name="Suite Setup" owner="petstore_keywords" type="SETUP">
<kw name="Create Session To PetStore" owner="petstore_keywords">
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-08T21:01:15.380116" level="INFO">Length is 30.</msg>
<arg>${BASE_URL}</arg>
<arg>msg=Base URL not configured</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-08T21:01:15.379828" elapsed="0.000367"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${BASE_URL}</arg>
<arg>https://</arg>
<arg>msg=Insecure HTTP protocol</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-07-08T21:01:15.380426" elapsed="0.000237"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${BASE_URL}</arg>
<arg>/v2</arg>
<arg>msg=Missing API version path</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-07-08T21:01:15.380795" elapsed="0.000182"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Creating session to: ${BASE_URL}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-08T21:01:15.381110" elapsed="0.000752"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-08T21:01:15.382303" level="INFO">Creating Session using : alias=petstore, url=https://petstore.swagger.io/v2, headers={'Content-Type': 'application/json', 'accept': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<msg time="2025-07-08T21:01:15.382695" level="INFO">${session} = &lt;requests.sessions.Session object at 0x0000023E3B5A1160&gt;</msg>
<var>${session}</var>
<arg>petstore</arg>
<arg>${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-08T21:01:15.382011" elapsed="0.000725"/>
</kw>
<return>
<value>${session}</value>
<status status="PASS" start="2025-07-08T21:01:15.382828" elapsed="0.000063"/>
</return>
<doc>Creates HTTP session to PetStore API
- Base URL: https://petstore.swagger.io/v2
- Headers: {'Content-Type': 'application/json', 'accept': 'application/json'}
- SSL Verification: Enabled</doc>
<status status="PASS" start="2025-07-08T21:01:15.379137" elapsed="0.003900"/>
</kw>
<status status="PASS" start="2025-07-08T21:01:15.378605" elapsed="0.004508"/>
</kw>
<test id="s1-t1" name="TC00 - Verify API Connection" line="46">
<kw name="Create Session To PetStore" owner="petstore_keywords">
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-08T21:01:15.384482" level="INFO">Length is 30.</msg>
<arg>${BASE_URL}</arg>
<arg>msg=Base URL not configured</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-08T21:01:15.384276" elapsed="0.000263"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${BASE_URL}</arg>
<arg>https://</arg>
<arg>msg=Insecure HTTP protocol</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-07-08T21:01:15.384658" elapsed="0.000175"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${BASE_URL}</arg>
<arg>/v2</arg>
<arg>msg=Missing API version path</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-07-08T21:01:15.384947" elapsed="0.000168"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Creating session to: ${BASE_URL}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-08T21:01:15.385241" elapsed="0.000607"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-08T21:01:15.386224" level="INFO">Creating Session using : alias=petstore, url=https://petstore.swagger.io/v2, headers={'Content-Type': 'application/json', 'accept': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<msg time="2025-07-08T21:01:15.386476" level="INFO">${session} = &lt;requests.sessions.Session object at 0x0000023E3B595F90&gt;</msg>
<var>${session}</var>
<arg>petstore</arg>
<arg>${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-08T21:01:15.385977" elapsed="0.000536"/>
</kw>
<return>
<value>${session}</value>
<status status="PASS" start="2025-07-08T21:01:15.386598" elapsed="0.000048"/>
</return>
<doc>Creates HTTP session to PetStore API
- Base URL: https://petstore.swagger.io/v2
- Headers: {'Content-Type': 'application/json', 'accept': 'application/json'}
- SSL Verification: Enabled</doc>
<status status="PASS" start="2025-07-08T21:01:15.384018" elapsed="0.002745"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-07-08T21:01:16.472412" level="INFO">GET Request : url=https://petstore.swagger.io/v2/swagger.json 
 path_url=/v2/swagger.json 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2025-07-08T21:01:16.472815" level="INFO">GET Response : url=https://petstore.swagger.io/v2/swagger.json 
 status=200, reason=OK 
 headers={'Date': 'Tue, 08 Jul 2025 21:01:16 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT', 'Access-Control-Allow-Headers': 'Content-Type, api_key, Authorization', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body={"swagger":"2.0","info":{"description":"This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.","version":"1.0.7","title":"Swagger Petstore","termsOfService":"http://swagger.io/terms/","contact":{"email":"apiteam@swagger.io"},"license":{"name":"Apache 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0.html"}},"host":"petstore.swagger.io","basePath":"/v2","tags":[{"name":"pet","description":"Everything about your Pets","externalDocs":{"description":"Find out more","url":"http://swagger.io"}},{"name":"store","description":"Access to Petstore orders"},{"name":"user","description":"Operations about user","externalDocs":{"description":"Find out more about our store","url":"http://swagger.io"}}],"schemes":["https","http"],"paths":{"/pet/{petId}/uploadImage":{"post":{"tags":["pet"],"summary":"uploads an image","description":"","operationId":"uploadFile","consumes":["multipart/form-data"],"produces":["application/json"],"parameters":[{"name":"petId","in":"path","description":"ID of pet to update","required":true,"type":"integer","format":"int64"},{"name":"additionalMetadata","in":"formData","description":"Additional data to pass to server","required":false,"type":"string"},{"name":"file","in":"formData","description":"file to upload","required":false,"type":"file"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ApiResponse"}}},"security":[{"petstore_auth":["write:pets","read:pets"]}]}},"/pet":{"post":{"tags":["pet"],"summary":"Add a new pet to the store","description":"","operationId":"addPet","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"body","description":"Pet object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/Pet"}}],"responses":{"405":{"description":"Invalid input"}},"security":[{"petstore_auth":["write:pets","read:pets"]}]},"put":{"tags":["pet"],"summary":"Update an existing pet","description":"","operationId":"updatePet","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"body","description":"Pet object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/Pet"}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Pet not found"},"405":{"description":"Validation exception"}},"security":[{"petstore_auth":["write:pets","read:pets"]}]}},"/pet/findByStatus":{"get":{"tags":["pet"],"summary":"Finds Pets by status","description":"Multiple status values can be provided with comma separated strings","operationId":"findPetsByStatus","produces":["application/json","application/xml"],"parameters":[{"name":"status","in":"query","description":"Status values that need to be considered for filter","required":true,"type":"array","items":{"type":"string","enum":["available","pending","sold"],"default":"available"},"collectionFormat":"multi"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Pet"}}},"400":{"description":"Invalid status value"}},"security":[{"petstore_auth":["write:pets","read:pets"]}]}},"/pet/findByTags":{"get":{"tags":["pet"],"summary":"Finds Pets by tags","description":"Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.","operationId":"findPetsByTags","produces":["application/json","application/xml"],"parameters":[{"name":"tags","in":"query","description":"Tags to filter by","required":true,"type":"array","items":{"type":"string"},"collectionFormat":"multi"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Pet"}}},"400":{"description":"Invalid tag value"}},"security":[{"petstore_auth":["write:pets","read:pets"]}],"deprecated":true}},"/pet/{petId}":{"get":{"tags":["pet"],"summary":"Find pet by ID","description":"Returns a single pet","operationId":"getPetById","produces":["application/json","application/xml"],"parameters":[{"name":"petId","in":"path","description":"ID of pet to return","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Pet"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"Pet not found"}},"security":[{"api_key":[]}]},"post":{"tags":["pet"],"summary":"Updates a pet in the store with form data","description":"","operationId":"updatePetWithForm","consumes":["application/x-www-form-urlencoded"],"produces":["application/json","application/xml"],"parameters":[{"name":"petId","in":"path","description":"ID of pet that needs to be updated","required":true,"type":"integer","format":"int64"},{"name":"name","in":"formData","description":"Updated name of the pet","required":false,"type":"string"},{"name":"status","in":"formData","description":"Updated status of the pet","required":false,"type":"string"}],"responses":{"405":{"description":"Invalid input"}},"security":[{"petstore_auth":["write:pets","read:pets"]}]},"delete":{"tags":["pet"],"summary":"Deletes a pet","description":"","operationId":"deletePet","produces":["application/json","application/xml"],"parameters":[{"name":"api_key","in":"header","required":false,"type":"string"},{"name":"petId","in":"path","description":"Pet id to delete","required":true,"type":"integer","format":"int64"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Pet not found"}},"security":[{"petstore_auth":["write:pets","read:pets"]}]}},"/store/inventory":{"get":{"tags":["store"],"summary":"Returns pet inventories by status","description":"Returns a map of status codes to quantities","operationId":"getInventory","produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"type":"object","additionalProperties":{"type":"integer","format":"int32"}}}},"security":[{"api_key":[]}]}},"/store/order":{"post":{"tags":["store"],"summary":"Place an order for a pet","description":"","operationId":"placeOrder","consumes":["application/json"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"body","description":"order placed for purchasing the pet","required":true,"schema":{"$ref":"#/definitions/Order"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Order"}},"400":{"description":"Invalid Order"}}}},"/store/order/{orderId}":{"get":{"tags":["store"],"summary":"Find purchase order by ID","description":"For valid response try integer IDs with value &gt;= 1 and &lt;= 10. Other values will generated exceptions","operationId":"getOrderById","produces":["application/json","application/xml"],"parameters":[{"name":"orderId","in":"path","description":"ID of pet that needs to be fetched","required":true,"type":"integer","maximum":10,"minimum":1,"format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Order"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"Order not found"}}},"delete":{"tags":["store"],"summary":"Delete purchase order by ID","description":"For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors","operationId":"deleteOrder","produces":["application/json","application/xml"],"parameters":[{"name":"orderId","in":"path","description":"ID of the order that needs to be deleted","required":true,"type":"integer","minimum":1,"format":"int64"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Order not found"}}}},"/user/createWithList":{"post":{"tags":["user"],"summary":"Creates list of users with given input array","description":"","operationId":"createUsersWithListInput","consumes":["application/json"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"body","description":"List of user object","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/User"}}}],"responses":{"default":{"description":"successful operation"}}}},"/user/{username}":{"get":{"tags":["user"],"summary":"Get user by user name","description":"","operationId":"getUserByName","produces":["application/json","application/xml"],"parameters":[{"name":"username","in":"path","description":"The name that needs to be fetched. Use user1 for testing. ","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/User"}},"400":{"description":"Invalid username supplied"},"404":{"description":"User not found"}}},"put":{"tags":["user"],"summary":"Updated user","description":"This can only be done by the logged in user.","operationId":"updateUser","consumes":["application/json"],"produces":["application/json","application/xml"],"parameters":[{"name":"username","in":"path","description":"name that need to be updated","required":true,"type":"string"},{"in":"body","name":"body","description":"Updated user object","required":true,"schema":{"$ref":"#/definitions/User"}}],"responses":{"400":{"description":"Invalid user supplied"},"404":{"description":"User not found"}}},"delete":{"tags":["user"],"summary":"Delete user","description":"This can only be done by the logged in user.","operationId":"deleteUser","produces":["application/json","application/xml"],"parameters":[{"name":"username","in":"path","description":"The name that needs to be deleted","required":true,"type":"string"}],"responses":{"400":{"description":"Invalid username supplied"},"404":{"description":"User not found"}}}},"/user/login":{"get":{"tags":["user"],"summary":"Logs user into the system","description":"","operationId":"loginUser","produces":["applicatio... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg time="2025-07-08T21:01:16.473727" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>petstore</arg>
<arg>/swagger.json</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-08T21:01:15.387267" elapsed="1.086540"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-07-08T21:01:16.476131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-07-08T21:01:16.474762" elapsed="0.001521"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${response.text}</arg>
<arg>Petstore</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-07-08T21:01:16.477177" elapsed="0.001701"/>
</kw>
<status status="PASS" start="2025-07-08T21:01:15.383188" elapsed="1.096526"/>
</test>
<test id="s1-t2" name="TC001 - Debug API Connection" line="52">
<kw name="Create Session To PetStore" owner="petstore_keywords">
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-07-08T21:01:16.485748" level="INFO">Length is 30.</msg>
<arg>${BASE_URL}</arg>
<arg>msg=Base URL not configured</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-07-08T21:01:16.485570" elapsed="0.000239"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${BASE_URL}</arg>
<arg>https://</arg>
<arg>msg=Insecure HTTP protocol</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-07-08T21:01:16.485940" elapsed="0.000181"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${BASE_URL}</arg>
<arg>/v2</arg>
<arg>msg=Missing API version path</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-07-08T21:01:16.486249" elapsed="0.000176"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Creating session to: ${BASE_URL}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-08T21:01:16.486538" elapsed="0.000938"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-08T21:01:16.487831" level="INFO">Creating Session using : alias=petstore, url=https://petstore.swagger.io/v2, headers={'Content-Type': 'application/json', 'accept': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<msg time="2025-07-08T21:01:16.488247" level="INFO">${session} = &lt;requests.sessions.Session object at 0x0000023E3B597250&gt;</msg>
<var>${session}</var>
<arg>petstore</arg>
<arg>${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-08T21:01:16.487600" elapsed="0.000716"/>
</kw>
<return>
<value>${session}</value>
<status status="PASS" start="2025-07-08T21:01:16.488445" elapsed="0.000135"/>
</return>
<doc>Creates HTTP session to PetStore API
- Base URL: https://petstore.swagger.io/v2
- Headers: {'Content-Type': 'application/json', 'accept': 'application/json'}
- SSL Verification: Enabled</doc>
<status status="PASS" start="2025-07-08T21:01:16.485296" elapsed="0.003508"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-07-08T21:01:17.392764" level="INFO">GET Request : url=https://petstore.swagger.io/v2/swagger.json 
 path_url=/v2/swagger.json 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2025-07-08T21:01:17.392960" level="INFO">GET Response : url=https://petstore.swagger.io/v2/swagger.json 
 status=200, reason=OK 
 headers={'Date': 'Tue, 08 Jul 2025 21:01:17 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT', 'Access-Control-Allow-Headers': 'Content-Type, api_key, Authorization', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body={"swagger":"2.0","info":{"description":"This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.","version":"1.0.7","title":"Swagger Petstore","termsOfService":"http://swagger.io/terms/","contact":{"email":"apiteam@swagger.io"},"license":{"name":"Apache 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0.html"}},"host":"petstore.swagger.io","basePath":"/v2","tags":[{"name":"pet","description":"Everything about your Pets","externalDocs":{"description":"Find out more","url":"http://swagger.io"}},{"name":"store","description":"Access to Petstore orders"},{"name":"user","description":"Operations about user","externalDocs":{"description":"Find out more about our store","url":"http://swagger.io"}}],"schemes":["https","http"],"paths":{"/pet/{petId}/uploadImage":{"post":{"tags":["pet"],"summary":"uploads an image","description":"","operationId":"uploadFile","consumes":["multipart/form-data"],"produces":["application/json"],"parameters":[{"name":"petId","in":"path","description":"ID of pet to update","required":true,"type":"integer","format":"int64"},{"name":"additionalMetadata","in":"formData","description":"Additional data to pass to server","required":false,"type":"string"},{"name":"file","in":"formData","description":"file to upload","required":false,"type":"file"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ApiResponse"}}},"security":[{"petstore_auth":["write:pets","read:pets"]}]}},"/pet":{"post":{"tags":["pet"],"summary":"Add a new pet to the store","description":"","operationId":"addPet","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"body","description":"Pet object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/Pet"}}],"responses":{"405":{"description":"Invalid input"}},"security":[{"petstore_auth":["write:pets","read:pets"]}]},"put":{"tags":["pet"],"summary":"Update an existing pet","description":"","operationId":"updatePet","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"body","description":"Pet object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/Pet"}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Pet not found"},"405":{"description":"Validation exception"}},"security":[{"petstore_auth":["write:pets","read:pets"]}]}},"/pet/findByStatus":{"get":{"tags":["pet"],"summary":"Finds Pets by status","description":"Multiple status values can be provided with comma separated strings","operationId":"findPetsByStatus","produces":["application/json","application/xml"],"parameters":[{"name":"status","in":"query","description":"Status values that need to be considered for filter","required":true,"type":"array","items":{"type":"string","enum":["available","pending","sold"],"default":"available"},"collectionFormat":"multi"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Pet"}}},"400":{"description":"Invalid status value"}},"security":[{"petstore_auth":["write:pets","read:pets"]}]}},"/pet/findByTags":{"get":{"tags":["pet"],"summary":"Finds Pets by tags","description":"Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.","operationId":"findPetsByTags","produces":["application/json","application/xml"],"parameters":[{"name":"tags","in":"query","description":"Tags to filter by","required":true,"type":"array","items":{"type":"string"},"collectionFormat":"multi"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Pet"}}},"400":{"description":"Invalid tag value"}},"security":[{"petstore_auth":["write:pets","read:pets"]}],"deprecated":true}},"/pet/{petId}":{"get":{"tags":["pet"],"summary":"Find pet by ID","description":"Returns a single pet","operationId":"getPetById","produces":["application/json","application/xml"],"parameters":[{"name":"petId","in":"path","description":"ID of pet to return","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Pet"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"Pet not found"}},"security":[{"api_key":[]}]},"post":{"tags":["pet"],"summary":"Updates a pet in the store with form data","description":"","operationId":"updatePetWithForm","consumes":["application/x-www-form-urlencoded"],"produces":["application/json","application/xml"],"parameters":[{"name":"petId","in":"path","description":"ID of pet that needs to be updated","required":true,"type":"integer","format":"int64"},{"name":"name","in":"formData","description":"Updated name of the pet","required":false,"type":"string"},{"name":"status","in":"formData","description":"Updated status of the pet","required":false,"type":"string"}],"responses":{"405":{"description":"Invalid input"}},"security":[{"petstore_auth":["write:pets","read:pets"]}]},"delete":{"tags":["pet"],"summary":"Deletes a pet","description":"","operationId":"deletePet","produces":["application/json","application/xml"],"parameters":[{"name":"api_key","in":"header","required":false,"type":"string"},{"name":"petId","in":"path","description":"Pet id to delete","required":true,"type":"integer","format":"int64"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Pet not found"}},"security":[{"petstore_auth":["write:pets","read:pets"]}]}},"/store/inventory":{"get":{"tags":["store"],"summary":"Returns pet inventories by status","description":"Returns a map of status codes to quantities","operationId":"getInventory","produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"type":"object","additionalProperties":{"type":"integer","format":"int32"}}}},"security":[{"api_key":[]}]}},"/store/order":{"post":{"tags":["store"],"summary":"Place an order for a pet","description":"","operationId":"placeOrder","consumes":["application/json"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"body","description":"order placed for purchasing the pet","required":true,"schema":{"$ref":"#/definitions/Order"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Order"}},"400":{"description":"Invalid Order"}}}},"/store/order/{orderId}":{"get":{"tags":["store"],"summary":"Find purchase order by ID","description":"For valid response try integer IDs with value &gt;= 1 and &lt;= 10. Other values will generated exceptions","operationId":"getOrderById","produces":["application/json","application/xml"],"parameters":[{"name":"orderId","in":"path","description":"ID of pet that needs to be fetched","required":true,"type":"integer","maximum":10,"minimum":1,"format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Order"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"Order not found"}}},"delete":{"tags":["store"],"summary":"Delete purchase order by ID","description":"For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors","operationId":"deleteOrder","produces":["application/json","application/xml"],"parameters":[{"name":"orderId","in":"path","description":"ID of the order that needs to be deleted","required":true,"type":"integer","minimum":1,"format":"int64"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Order not found"}}}},"/user/createWithList":{"post":{"tags":["user"],"summary":"Creates list of users with given input array","description":"","operationId":"createUsersWithListInput","consumes":["application/json"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"body","description":"List of user object","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/User"}}}],"responses":{"default":{"description":"successful operation"}}}},"/user/{username}":{"get":{"tags":["user"],"summary":"Get user by user name","description":"","operationId":"getUserByName","produces":["application/json","application/xml"],"parameters":[{"name":"username","in":"path","description":"The name that needs to be fetched. Use user1 for testing. ","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/User"}},"400":{"description":"Invalid username supplied"},"404":{"description":"User not found"}}},"put":{"tags":["user"],"summary":"Updated user","description":"This can only be done by the logged in user.","operationId":"updateUser","consumes":["application/json"],"produces":["application/json","application/xml"],"parameters":[{"name":"username","in":"path","description":"name that need to be updated","required":true,"type":"string"},{"in":"body","name":"body","description":"Updated user object","required":true,"schema":{"$ref":"#/definitions/User"}}],"responses":{"400":{"description":"Invalid user supplied"},"404":{"description":"User not found"}}},"delete":{"tags":["user"],"summary":"Delete user","description":"This can only be done by the logged in user.","operationId":"deleteUser","produces":["application/json","application/xml"],"parameters":[{"name":"username","in":"path","description":"The name that needs to be deleted","required":true,"type":"string"}],"responses":{"400":{"description":"Invalid username supplied"},"404":{"description":"User not found"}}}},"/user/login":{"get":{"tags":["user"],"summary":"Logs user into the system","description":"","operationId":"loginUser","produces":["applicatio... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg time="2025-07-08T21:01:17.393503" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>petstore</arg>
<arg>/swagger.json</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-08T21:01:16.489678" elapsed="0.903878"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-08T21:01:17.395132" level="INFO">API Status: 200</msg>
<arg>API Status: ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-08T21:01:17.394466" elapsed="0.000728"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-08T21:01:17.397277" level="INFO">API Response: {"swagger":"2.0","info":{"description":"This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.","version":"1.0.7","title":"Swagger Petstore","termsOfService":"http://swagger.io/terms/","contact":{"email":"apiteam@swagger.io"},"license":{"name":"Apache 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0.html"}},"host":"petstore.swagger.io","basePath":"/v2","tags":[{"name":"pet","description":"Everything about your Pets","externalDocs":{"description":"Find out more","url":"http://swagger.io"}},{"name":"store","description":"Access to Petstore orders"},{"name":"user","description":"Operations about user","externalDocs":{"description":"Find out more about our store","url":"http://swagger.io"}}],"schemes":["https","http"],"paths":{"/pet/{petId}/uploadImage":{"post":{"tags":["pet"],"summary":"uploads an image","description":"","operationId":"uploadFile","consumes":["multipart/form-data"],"produces":["application/json"],"parameters":[{"name":"petId","in":"path","description":"ID of pet to update","required":true,"type":"integer","format":"int64"},{"name":"additionalMetadata","in":"formData","description":"Additional data to pass to server","required":false,"type":"string"},{"name":"file","in":"formData","description":"file to upload","required":false,"type":"file"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ApiResponse"}}},"security":[{"petstore_auth":["write:pets","read:pets"]}]}},"/pet":{"post":{"tags":["pet"],"summary":"Add a new pet to the store","description":"","operationId":"addPet","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"body","description":"Pet object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/Pet"}}],"responses":{"405":{"description":"Invalid input"}},"security":[{"petstore_auth":["write:pets","read:pets"]}]},"put":{"tags":["pet"],"summary":"Update an existing pet","description":"","operationId":"updatePet","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"body","description":"Pet object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/Pet"}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Pet not found"},"405":{"description":"Validation exception"}},"security":[{"petstore_auth":["write:pets","read:pets"]}]}},"/pet/findByStatus":{"get":{"tags":["pet"],"summary":"Finds Pets by status","description":"Multiple status values can be provided with comma separated strings","operationId":"findPetsByStatus","produces":["application/json","application/xml"],"parameters":[{"name":"status","in":"query","description":"Status values that need to be considered for filter","required":true,"type":"array","items":{"type":"string","enum":["available","pending","sold"],"default":"available"},"collectionFormat":"multi"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Pet"}}},"400":{"description":"Invalid status value"}},"security":[{"petstore_auth":["write:pets","read:pets"]}]}},"/pet/findByTags":{"get":{"tags":["pet"],"summary":"Finds Pets by tags","description":"Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.","operationId":"findPetsByTags","produces":["application/json","application/xml"],"parameters":[{"name":"tags","in":"query","description":"Tags to filter by","required":true,"type":"array","items":{"type":"string"},"collectionFormat":"multi"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Pet"}}},"400":{"description":"Invalid tag value"}},"security":[{"petstore_auth":["write:pets","read:pets"]}],"deprecated":true}},"/pet/{petId}":{"get":{"tags":["pet"],"summary":"Find pet by ID","description":"Returns a single pet","operationId":"getPetById","produces":["application/json","application/xml"],"parameters":[{"name":"petId","in":"path","description":"ID of pet to return","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Pet"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"Pet not found"}},"security":[{"api_key":[]}]},"post":{"tags":["pet"],"summary":"Updates a pet in the store with form data","description":"","operationId":"updatePetWithForm","consumes":["application/x-www-form-urlencoded"],"produces":["application/json","application/xml"],"parameters":[{"name":"petId","in":"path","description":"ID of pet that needs to be updated","required":true,"type":"integer","format":"int64"},{"name":"name","in":"formData","description":"Updated name of the pet","required":false,"type":"string"},{"name":"status","in":"formData","description":"Updated status of the pet","required":false,"type":"string"}],"responses":{"405":{"description":"Invalid input"}},"security":[{"petstore_auth":["write:pets","read:pets"]}]},"delete":{"tags":["pet"],"summary":"Deletes a pet","description":"","operationId":"deletePet","produces":["application/json","application/xml"],"parameters":[{"name":"api_key","in":"header","required":false,"type":"string"},{"name":"petId","in":"path","description":"Pet id to delete","required":true,"type":"integer","format":"int64"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Pet not found"}},"security":[{"petstore_auth":["write:pets","read:pets"]}]}},"/store/inventory":{"get":{"tags":["store"],"summary":"Returns pet inventories by status","description":"Returns a map of status codes to quantities","operationId":"getInventory","produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"type":"object","additionalProperties":{"type":"integer","format":"int32"}}}},"security":[{"api_key":[]}]}},"/store/order":{"post":{"tags":["store"],"summary":"Place an order for a pet","description":"","operationId":"placeOrder","consumes":["application/json"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"body","description":"order placed for purchasing the pet","required":true,"schema":{"$ref":"#/definitions/Order"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Order"}},"400":{"description":"Invalid Order"}}}},"/store/order/{orderId}":{"get":{"tags":["store"],"summary":"Find purchase order by ID","description":"For valid response try integer IDs with value &gt;= 1 and &lt;= 10. Other values will generated exceptions","operationId":"getOrderById","produces":["application/json","application/xml"],"parameters":[{"name":"orderId","in":"path","description":"ID of pet that needs to be fetched","required":true,"type":"integer","maximum":10,"minimum":1,"format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Order"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"Order not found"}}},"delete":{"tags":["store"],"summary":"Delete purchase order by ID","description":"For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors","operationId":"deleteOrder","produces":["application/json","application/xml"],"parameters":[{"name":"orderId","in":"path","description":"ID of the order that needs to be deleted","required":true,"type":"integer","minimum":1,"format":"int64"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Order not found"}}}},"/user/createWithList":{"post":{"tags":["user"],"summary":"Creates list of users with given input array","description":"","operationId":"createUsersWithListInput","consumes":["application/json"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"body","description":"List of user object","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/User"}}}],"responses":{"default":{"description":"successful operation"}}}},"/user/{username}":{"get":{"tags":["user"],"summary":"Get user by user name","description":"","operationId":"getUserByName","produces":["application/json","application/xml"],"parameters":[{"name":"username","in":"path","description":"The name that needs to be fetched. Use user1 for testing. ","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/User"}},"400":{"description":"Invalid username supplied"},"404":{"description":"User not found"}}},"put":{"tags":["user"],"summary":"Updated user","description":"This can only be done by the logged in user.","operationId":"updateUser","consumes":["application/json"],"produces":["application/json","application/xml"],"parameters":[{"name":"username","in":"path","description":"name that need to be updated","required":true,"type":"string"},{"in":"body","name":"body","description":"Updated user object","required":true,"schema":{"$ref":"#/definitions/User"}}],"responses":{"400":{"description":"Invalid user supplied"},"404":{"description":"User not found"}}},"delete":{"tags":["user"],"summary":"Delete user","description":"This can only be done by the logged in user.","operationId":"deleteUser","produces":["application/json","application/xml"],"parameters":[{"name":"username","in":"path","description":"The name that needs to be deleted","required":true,"type":"string"}],"responses":{"400":{"description":"Invalid username supplied"},"404":{"description":"User not found"}}}},"/user/login":{"get":{"tags":["user"],"summary":"Logs user into the system","description":"","operationId":"loginUser","produces":["application/json","application/xml"],"parameters":[{"name":"username","in":"query","description":"The user name for login","required":true,"type":"string"},{"name":"password","in":"query","description":"The password for login in clear text","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","headers":{"X-Expires-After":{"type":"string","format":"date-time","description":"date in UTC when token expires"},"X-Rate-Limit":{"type":"integer","format":"int32","description":"calls per hour allowed by the user"}},"schema":{"type":"string"}},"400":{"description":"Invalid username/password supplied"}}}},"/user/logout":{"get":{"tags":["user"],"summary":"Logs out current logged in user session","description":"","operationId":"logoutUser","produces":["application/json","application/xml"],"parameters":[],"responses":{"default":{"description":"successful operation"}}}},"/user/createWithArray":{"post":{"tags":["user"],"summary":"Creates list of users with given input array","description":"","operationId":"createUsersWithArrayInput","consumes":["application/json"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"body","description":"List of user object","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/User"}}}],"responses":{"default":{"description":"successful operation"}}}},"/user":{"post":{"tags":["user"],"summary":"Create user","description":"This can only be done by the logged in user.","operationId":"createUser","consumes":["application/json"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"body","description":"Created user object","required":true,"schema":{"$ref":"#/definitions/User"}}],"responses":{"default":{"description":"successful operation"}}}}},"securityDefinitions":{"api_key":{"type":"apiKey","name":"api_key","in":"header"},"petstore_auth":{"type":"oauth2","authorizationUrl":"https://petstore.swagger.io/oauth/authorize","flow":"implicit","scopes":{"read:pets":"read your pets","write:pets":"modify pets in your account"}}},"definitions":{"ApiResponse":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"type":{"type":"string"},"message":{"type":"string"}}},"Category":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"name":{"type":"string"}},"xml":{"name":"Category"}},"Pet":{"type":"object","required":["name","photoUrls"],"properties":{"id":{"type":"integer","format":"int64"},"category":{"$ref":"#/definitions/Category"},"name":{"type":"string","example":"doggie"},"photoUrls":{"type":"array","xml":{"wrapped":true},"items":{"type":"string","xml":{"name":"photoUrl"}}},"tags":{"type":"array","xml":{"wrapped":true},"items":{"xml":{"name":"tag"},"$ref":"#/definitions/Tag"}},"status":{"type":"string","description":"pet status in the store","enum":["available","pending","sold"]}},"xml":{"name":"Pet"}},"Tag":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"name":{"type":"string"}},"xml":{"name":"Tag"}},"Order":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"petId":{"type":"integer","format":"int64"},"quantity":{"type":"integer","format":"int32"},"shipDate":{"type":"string","format":"date-time"},"status":{"type":"string","description":"Order Status","enum":["placed","approved","delivered"]},"complete":{"type":"boolean"}},"xml":{"name":"Order"}},"User":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"username":{"type":"string"},"firstName":{"type":"string"},"lastName":{"type":"string"},"email":{"type":"string"},"password":{"type":"string"},"phone":{"type":"string"},"userStatus":{"type":"integer","format":"int32","description":"User Status"}},"xml":{"name":"User"}}},"externalDocs":{"description":"Find out more about Swagger","url":"http://swagger.io"}}</msg>
<arg>API Response: ${response.text}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-08T21:01:17.396015" elapsed="0.001771"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-07-08T21:01:17.399878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-07-08T21:01:17.398667" elapsed="0.001339"/>
</kw>
<status status="PASS" start="2025-07-08T21:01:16.484434" elapsed="0.916385"/>
</test>
<test id="s1-t3" name="TC01 - Add New Pet" line="59">
<kw name="Add New Pet" owner="petstore_keywords">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-08T21:01:17.404920" level="INFO">${json_string} = {"id": 12345123451, "name": "Rex", "category": {"id": 1, "name": "Dogs"}, "photoUrls": ["https://downloadscdn6.freepik.com/1562/1/693.jpg?filename=chien-souriant-heureux-isole-sur-fond-blanc-portrait-...</msg>
<var>${json_string}</var>
<arg>json.dumps(${pet_data})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-08T21:01:17.404422" elapsed="0.000536"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-07-08T21:01:17.600369" level="INFO">POST Request : url=https://petstore.swagger.io/v2/pet 
 path_url=/v2/pet 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '348'} 
 body={"id": 12345123451, "name": "Rex", "category": {"id": 1, "name": "Dogs"}, "photoUrls": ["https://downloadscdn6.freepik.com/1562/1/693.jpg?filename=chien-souriant-heureux-isole-sur-fond-blanc-portrait-4.jpg&amp;token=exp=1752001883~hmac=e303bd11eea624ecbd8daa06f9556776&amp;filename=693.jpg"], "tags": [{"id": 1, "name": "friendly"}], "status": "available"} 
 </msg>
<msg time="2025-07-08T21:01:17.600505" level="INFO">POST Response : url=https://petstore.swagger.io/v2/pet 
 status=200, reason=OK 
 headers={'Date': 'Tue, 08 Jul 2025 21:01:17 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT', 'Access-Control-Allow-Headers': 'Content-Type, api_key, Authorization', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body={"id":12345123451,"category":{"id":1,"name":"Dogs"},"name":"Rex","photoUrls":["https://downloadscdn6.freepik.com/1562/1/693.jpg?filename=chien-souriant-heureux-isole-sur-fond-blanc-portrait-4.jpg&amp;token=exp=1752001883~hmac=e303bd11eea624ecbd8daa06f9556776&amp;filename=693.jpg"],"tags":[{"id":1,"name":"friendly"}],"status":"available"} 
 </msg>
<msg time="2025-07-08T21:01:17.600703" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>petstore</arg>
<arg>/pet</arg>
<arg>data=${json_string}</arg>
<arg>headers=${HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-08T21:01:17.405085" elapsed="0.195668"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-07-08T21:01:17.602425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-07-08T21:01:17.601014" elapsed="0.001550"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" start="2025-07-08T21:01:17.602702" elapsed="0.000071"/>
</return>
<msg time="2025-07-08T21:01:17.604139" level="INFO">${new_pet} = {'id': 12345123451, 'category': {'id': 1, 'name': 'Dogs'}, 'name': 'Rex', 'photoUrls': ['https://downloadscdn6.freepik.com/1562/1/693.jpg?filename=chien-souriant-heureux-isole-sur-fond-blanc-portrait-...</msg>
<var>${new_pet}</var>
<arg>${TEST_PET_DOG}</arg>
<status status="PASS" start="2025-07-08T21:01:17.404097" elapsed="0.200108"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<arg>${new_pet['id']}</arg>
<arg>${TEST_PET_DOG['id']}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-08T21:01:17.604938" elapsed="0.002372"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${new_pet['name']}</arg>
<arg>${TEST_PET_DOG['name']}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-07-08T21:01:17.608316" elapsed="0.002157"/>
</kw>
<status status="PASS" start="2025-07-08T21:01:17.403476" elapsed="0.207872"/>
</test>
<test id="s1-t4" name="TC001 - Add New Pet" line="64">
<kw name="Add New Pet" owner="petstore_keywords">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-08T21:01:17.618146" level="INFO">${json_string} = {"id": 12345123452, "name": "Whiskers", "category": {"id": 2, "name": "Cats"}, "photoUrls": ["https://downloadscdn6.freepik.com/1562/1/693.jpg?filename=chien-souriant-heureux-isole-sur-fond-blanc-port...</msg>
<var>${json_string}</var>
<arg>json.dumps(${pet_data})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-08T21:01:17.616539" elapsed="0.001687"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-07-08T21:01:17.804520" level="INFO">POST Request : url=https://petstore.swagger.io/v2/pet 
 path_url=/v2/pet 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '584'} 
 body={"id": 12345123452, "name": "Whiskers", "category": {"id": 2, "name": "Cats"}, "photoUrls": ["https://downloadscdn6.freepik.com/1562/1/693.jpg?filename=chien-souriant-heureux-isole-sur-fond-blanc-portrait-4.jpg&amp;token=exp=1752001883~hmac=e303bd11eea624ecbd8daa06f9556776&amp;filename=693.jpg", "https://downloadscdn6.freepik.com/1562/1/693.jpg?filename=chien-souriant-heureux-isole-sur-fond-blanc-portrait-4.jpg&amp;token=exp=1752001883~hmac=e303bd11eea624ecbd8daa06f9556776&amp;filename=693.jpg"], "tags": [{"id": 1, "name": "playful"}, {"id": 2, "name": "needs_attention"}], "status": "pending"} 
 </msg>
<msg time="2025-07-08T21:01:17.804699" level="INFO">POST Response : url=https://petstore.swagger.io/v2/pet 
 status=200, reason=OK 
 headers={'Date': 'Tue, 08 Jul 2025 21:01:18 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT', 'Access-Control-Allow-Headers': 'Content-Type, api_key, Authorization', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body={"id":12345123452,"category":{"id":2,"name":"Cats"},"name":"Whiskers","photoUrls":["https://downloadscdn6.freepik.com/1562/1/693.jpg?filename=chien-souriant-heureux-isole-sur-fond-blanc-portrait-4.jpg&amp;token=exp=1752001883~hmac=e303bd11eea624ecbd8daa06f9556776&amp;filename=693.jpg","https://downloadscdn6.freepik.com/1562/1/693.jpg?filename=chien-souriant-heureux-isole-sur-fond-blanc-portrait-4.jpg&amp;token=exp=1752001883~hmac=e303bd11eea624ecbd8daa06f9556776&amp;filename=693.jpg"],"tags":[{"id":1,"name":"playful"},{"id":2,"name":"needs_attention"}],"status":"pending"} 
 </msg>
<msg time="2025-07-08T21:01:17.804925" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>petstore</arg>
<arg>/pet</arg>
<arg>data=${json_string}</arg>
<arg>headers=${HEADERS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-08T21:01:17.618542" elapsed="0.186433"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-07-08T21:01:17.806537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-07-08T21:01:17.805254" elapsed="0.001548"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" start="2025-07-08T21:01:17.806934" elapsed="0.000076"/>
</return>
<msg time="2025-07-08T21:01:17.808337" level="INFO">${new_pet} = {'id': 12345123452, 'category': {'id': 2, 'name': 'Cats'}, 'name': 'Whiskers', 'photoUrls': ['https://downloadscdn6.freepik.com/1562/1/693.jpg?filename=chien-souriant-heureux-isole-sur-fond-blanc-port...</msg>
<var>${new_pet}</var>
<arg>${TEST_PET_CAT}</arg>
<status status="PASS" start="2025-07-08T21:01:17.615955" elapsed="0.192449"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<arg>${new_pet['id']}</arg>
<arg>${TEST_PET_CAT['id']}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-08T21:01:17.809151" elapsed="0.002360"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${new_pet['name']}</arg>
<arg>${TEST_PET_CAT['name']}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-07-08T21:01:17.812424" elapsed="0.002194"/>
</kw>
<status status="PASS" start="2025-07-08T21:01:17.615029" elapsed="0.200359"/>
</test>
<test id="s1-t5" name="TC02 - Get Pet By ID" line="69">
<kw name="Get Pet By ID" owner="petstore_keywords">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-07-08T21:01:18.006814" level="INFO">GET Request : url=https://petstore.swagger.io/v2/pet/12345123451 
 path_url=/v2/pet/12345123451 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2025-07-08T21:01:18.006950" level="INFO">GET Response : url=https://petstore.swagger.io/v2/pet/12345123451 
 status=200, reason=OK 
 headers={'Date': 'Tue, 08 Jul 2025 21:01:18 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT', 'Access-Control-Allow-Headers': 'Content-Type, api_key, Authorization', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body={"id":12345123451,"category":{"id":1,"name":"Dogs"},"name":"Rex","photoUrls":["https://downloadscdn6.freepik.com/1562/1/693.jpg?filename=chien-souriant-heureux-isole-sur-fond-blanc-portrait-4.jpg&amp;token=exp=1752001883~hmac=e303bd11eea624ecbd8daa06f9556776&amp;filename=693.jpg"],"tags":[{"id":1,"name":"friendly"}],"status":"available"} 
 </msg>
<msg time="2025-07-08T21:01:18.007140" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>petstore</arg>
<arg>/pet/${pet_id}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-08T21:01:17.821716" elapsed="0.185474"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-07-08T21:01:18.008630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-07-08T21:01:18.007426" elapsed="0.001304"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-08T21:01:18.010219" level="INFO">${json} = {'id': 12345123451, 'category': {'id': 1, 'name': 'Dogs'}, 'name': 'Rex', 'photoUrls': ['https://downloadscdn6.freepik.com/1562/1/693.jpg?filename=chien-souriant-heureux-isole-sur-fond-blanc-portrait-...</msg>
<var>${json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-08T21:01:18.008940" elapsed="0.001358"/>
</kw>
<return>
<value>${json}</value>
<status status="PASS" start="2025-07-08T21:01:18.010455" elapsed="0.000098"/>
</return>
<msg time="2025-07-08T21:01:18.010863" level="INFO">${pet} = {'id': 12345123451, 'category': {'id': 1, 'name': 'Dogs'}, 'name': 'Rex', 'photoUrls': ['https://downloadscdn6.freepik.com/1562/1/693.jpg?filename=chien-souriant-heureux-isole-sur-fond-blanc-portrait-...</msg>
<var>${pet}</var>
<arg>${TEST_PET_DOG['id']}</arg>
<status status="PASS" start="2025-07-08T21:01:17.820240" elapsed="0.190684"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${pet['name']}</arg>
<arg>${TEST_PET_DOG['name']}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-07-08T21:01:18.011618" elapsed="0.002281"/>
</kw>
<status status="PASS" start="2025-07-08T21:01:17.819295" elapsed="0.195255"/>
</test>
<test id="s1-t6" name="TC002 - Get Pet By ID" line="73">
<kw name="Get Pet By ID" owner="petstore_keywords">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-07-08T21:01:18.200757" level="INFO">GET Request : url=https://petstore.swagger.io/v2/pet/12345123452 
 path_url=/v2/pet/12345123452 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2025-07-08T21:01:18.200899" level="INFO">GET Response : url=https://petstore.swagger.io/v2/pet/12345123452 
 status=200, reason=OK 
 headers={'Date': 'Tue, 08 Jul 2025 21:01:18 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT', 'Access-Control-Allow-Headers': 'Content-Type, api_key, Authorization', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body={"id":12345123452,"category":{"id":2,"name":"Cats"},"name":"Whiskers","photoUrls":["https://downloadscdn6.freepik.com/1562/1/693.jpg?filename=chien-souriant-heureux-isole-sur-fond-blanc-portrait-4.jpg&amp;token=exp=1752001883~hmac=e303bd11eea624ecbd8daa06f9556776&amp;filename=693.jpg","https://downloadscdn6.freepik.com/1562/1/693.jpg?filename=chien-souriant-heureux-isole-sur-fond-blanc-portrait-4.jpg&amp;token=exp=1752001883~hmac=e303bd11eea624ecbd8daa06f9556776&amp;filename=693.jpg"],"tags":[{"id":1,"name":"playful"},{"id":2,"name":"needs_attention"}],"status":"pending"} 
 </msg>
<msg time="2025-07-08T21:01:18.201101" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>petstore</arg>
<arg>/pet/${pet_id}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-08T21:01:18.019914" elapsed="0.181253"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-07-08T21:01:18.202470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-07-08T21:01:18.201418" elapsed="0.001182"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-08T21:01:18.204112" level="INFO">${json} = {'id': 12345123452, 'category': {'id': 2, 'name': 'Cats'}, 'name': 'Whiskers', 'photoUrls': ['https://downloadscdn6.freepik.com/1562/1/693.jpg?filename=chien-souriant-heureux-isole-sur-fond-blanc-port...</msg>
<var>${json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-08T21:01:18.202876" elapsed="0.001271"/>
</kw>
<return>
<value>${json}</value>
<status status="PASS" start="2025-07-08T21:01:18.204206" elapsed="0.000040"/>
</return>
<msg time="2025-07-08T21:01:18.204393" level="INFO">${pet} = {'id': 12345123452, 'category': {'id': 2, 'name': 'Cats'}, 'name': 'Whiskers', 'photoUrls': ['https://downloadscdn6.freepik.com/1562/1/693.jpg?filename=chien-souriant-heureux-isole-sur-fond-blanc-port...</msg>
<var>${pet}</var>
<arg>${TEST_PET_CAT['id']}</arg>
<status status="PASS" start="2025-07-08T21:01:18.018363" elapsed="0.186134"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${pet['name']}</arg>
<arg>${TEST_PET_CAT['name']}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-07-08T21:01:18.205416" elapsed="0.000996"/>
</kw>
<status status="PASS" start="2025-07-08T21:01:18.017439" elapsed="0.189731"/>
</test>
<test id="s1-t7" name="TC03 - Update Pet" line="77">
<kw name="Update Pet" owner="petstore_keywords">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-08T21:01:18.211550" level="INFO">${json_data} = {"id": 12345123451, "name": "Rex Update", "category": {"id": 1, "name": "Dogs"}, "photoUrls": ["https://downloadscdn6.freepik.com/1562/1/693.jpg?filename=chien-souriant-heureux-isole-sur-fond-blanc-po...</msg>
<var>${json_data}</var>
<arg>json.dumps(${pet_data})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-08T21:01:18.211153" elapsed="0.000438"/>
</kw>
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2025-07-08T21:01:18.419929" level="INFO">PUT Request : url=https://petstore.swagger.io/v2/pet 
 path_url=/v2/pet 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '350'} 
 body={"id": 12345123451, "name": "Rex Update", "category": {"id": 1, "name": "Dogs"}, "photoUrls": ["https://downloadscdn6.freepik.com/1562/1/693.jpg?filename=chien-souriant-heureux-isole-sur-fond-blanc-portrait-4.jpg&amp;token=exp=1752001883~hmac=e303bd11eea624ecbd8daa06f9556776&amp;filename=693.jpg"], "tags": [{"id": 1, "name": "friendly"}], "status": "sold"} 
 </msg>
<msg time="2025-07-08T21:01:18.420091" level="INFO">PUT Response : url=https://petstore.swagger.io/v2/pet 
 status=200, reason=OK 
 headers={'Date': 'Tue, 08 Jul 2025 21:01:18 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT', 'Access-Control-Allow-Headers': 'Content-Type, api_key, Authorization', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body={"id":12345123451,"category":{"id":1,"name":"Dogs"},"name":"Rex Update","photoUrls":["https://downloadscdn6.freepik.com/1562/1/693.jpg?filename=chien-souriant-heureux-isole-sur-fond-blanc-portrait-4.jpg&amp;token=exp=1752001883~hmac=e303bd11eea624ecbd8daa06f9556776&amp;filename=693.jpg"],"tags":[{"id":1,"name":"friendly"}],"status":"sold"} 
 </msg>
<msg time="2025-07-08T21:01:18.420308" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>petstore</arg>
<arg>/pet</arg>
<arg>data=${json_data}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-08T21:01:18.211713" elapsed="0.208655"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-07-08T21:01:18.421737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-07-08T21:01:18.420648" elapsed="0.001203"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-08T21:01:18.422850" level="INFO">${json} = {'id': 12345123451, 'category': {'id': 1, 'name': 'Dogs'}, 'name': 'Rex Update', 'photoUrls': ['https://downloadscdn6.freepik.com/1562/1/693.jpg?filename=chien-souriant-heureux-isole-sur-fond-blanc-po...</msg>
<var>${json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-08T21:01:18.422077" elapsed="0.000825"/>
</kw>
<return>
<value>${json}</value>
<status status="PASS" start="2025-07-08T21:01:18.423012" elapsed="0.000050"/>
</return>
<msg time="2025-07-08T21:01:18.423220" level="INFO">${updated_pet} = {'id': 12345123451, 'category': {'id': 1, 'name': 'Dogs'}, 'name': 'Rex Update', 'photoUrls': ['https://downloadscdn6.freepik.com/1562/1/693.jpg?filename=chien-souriant-heureux-isole-sur-fond-blanc-po...</msg>
<var>${updated_pet}</var>
<arg>${TEST_PET_DOG_UPDATE}</arg>
<status status="PASS" start="2025-07-08T21:01:18.210809" elapsed="0.212441"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${updated_pet['name']}</arg>
<arg>${TEST_PET_DOG_UPDATE['name']}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-07-08T21:01:18.423829" elapsed="0.001556"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${updated_pet['status']}</arg>
<arg>${TEST_PET_DOG_UPDATE['status']}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-07-08T21:01:18.425966" elapsed="0.001108"/>
</kw>
<status status="PASS" start="2025-07-08T21:01:18.210222" elapsed="0.217350"/>
</test>
<test id="s1-t8" name="TC003 - Update Pet" line="82">
<kw name="Update Pet" owner="petstore_keywords">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-08T21:01:18.431792" level="INFO">${json_data} = {"id": 12345123452, "name": "Whiskers Update", "category": {"id": 2, "name": "Cats"}, "photoUrls": ["https://downloadscdn6.freepik.com/1562/1/693.jpg?filename=chien-souriant-heureux-isole-sur-fond-bla...</msg>
<var>${json_data}</var>
<arg>json.dumps(${pet_data})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-08T21:01:18.431347" elapsed="0.000485"/>
</kw>
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2025-07-08T21:01:18.601560" level="INFO">PUT Request : url=https://petstore.swagger.io/v2/pet 
 path_url=/v2/pet 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '588'} 
 body={"id": 12345123452, "name": "Whiskers Update", "category": {"id": 2, "name": "Cats"}, "photoUrls": ["https://downloadscdn6.freepik.com/1562/1/693.jpg?filename=chien-souriant-heureux-isole-sur-fond-blanc-portrait-4.jpg&amp;token=exp=1752001883~hmac=e303bd11eea624ecbd8daa06f9556776&amp;filename=693.jpg", "https://downloadscdn6.freepik.com/1562/1/693.jpg?filename=chien-souriant-heureux-isole-sur-fond-blanc-portrait-4.jpg&amp;token=exp=1752001883~hmac=e303bd11eea624ecbd8daa06f9556776&amp;filename=693.jpg"], "tags": [{"id": 1, "name": "playful"}, {"id": 2, "name": "needs_attention"}], "status": "sold"} 
 </msg>
<msg time="2025-07-08T21:01:18.601671" level="INFO">PUT Response : url=https://petstore.swagger.io/v2/pet 
 status=200, reason=OK 
 headers={'Date': 'Tue, 08 Jul 2025 21:01:18 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT', 'Access-Control-Allow-Headers': 'Content-Type, api_key, Authorization', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body={"id":12345123452,"category":{"id":2,"name":"Cats"},"name":"Whiskers Update","photoUrls":["https://downloadscdn6.freepik.com/1562/1/693.jpg?filename=chien-souriant-heureux-isole-sur-fond-blanc-portrait-4.jpg&amp;token=exp=1752001883~hmac=e303bd11eea624ecbd8daa06f9556776&amp;filename=693.jpg","https://downloadscdn6.freepik.com/1562/1/693.jpg?filename=chien-souriant-heureux-isole-sur-fond-blanc-portrait-4.jpg&amp;token=exp=1752001883~hmac=e303bd11eea624ecbd8daa06f9556776&amp;filename=693.jpg"],"tags":[{"id":1,"name":"playful"},{"id":2,"name":"needs_attention"}],"status":"sold"} 
 </msg>
<msg time="2025-07-08T21:01:18.601822" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>petstore</arg>
<arg>/pet</arg>
<arg>data=${json_data}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-08T21:01:18.431966" elapsed="0.169893"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-07-08T21:01:18.602831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-07-08T21:01:18.602125" elapsed="0.000794"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-08T21:01:18.603776" level="INFO">${json} = {'id': 12345123452, 'category': {'id': 2, 'name': 'Cats'}, 'name': 'Whiskers Update', 'photoUrls': ['https://downloadscdn6.freepik.com/1562/1/693.jpg?filename=chien-souriant-heureux-isole-sur-fond-bla...</msg>
<var>${json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-08T21:01:18.603067" elapsed="0.000751"/>
</kw>
<return>
<value>${json}</value>
<status status="PASS" start="2025-07-08T21:01:18.603887" elapsed="0.000045"/>
</return>
<msg time="2025-07-08T21:01:18.604109" level="INFO">${updated_pet} = {'id': 12345123452, 'category': {'id': 2, 'name': 'Cats'}, 'name': 'Whiskers Update', 'photoUrls': ['https://downloadscdn6.freepik.com/1562/1/693.jpg?filename=chien-souriant-heureux-isole-sur-fond-bla...</msg>
<var>${updated_pet}</var>
<arg>${TEST_PET_CAT_UPDATE}</arg>
<status status="PASS" start="2025-07-08T21:01:18.430913" elapsed="0.173232"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${updated_pet['name']}</arg>
<arg>${TEST_PET_CAT_UPDATE['name']}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-07-08T21:01:18.605070" elapsed="0.001140"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${updated_pet['status']}</arg>
<arg>${TEST_PET_CAT_UPDATE['status']}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-07-08T21:01:18.606976" elapsed="0.002050"/>
</kw>
<status status="PASS" start="2025-07-08T21:01:18.430298" elapsed="0.179552"/>
</test>
<test id="s1-t9" name="TC04 - Delete Pet" line="87">
<kw name="Delete Pet" owner="petstore_keywords">
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-07-08T21:01:18.805366" level="INFO">DELETE Request : url=https://petstore.swagger.io/v2/pet/12345123451 
 path_url=/v2/pet/12345123451 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-07-08T21:01:18.805500" level="INFO">DELETE Response : url=https://petstore.swagger.io/v2/pet/12345123451 
 status=200, reason=OK 
 headers={'Date': 'Tue, 08 Jul 2025 21:01:19 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT', 'Access-Control-Allow-Headers': 'Content-Type, api_key, Authorization', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body={"code":200,"type":"unknown","message":"12345123451"} 
 </msg>
<msg time="2025-07-08T21:01:18.805685" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>petstore</arg>
<arg>/pet/${pet_id}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-08T21:01:18.615007" elapsed="0.190726"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-07-08T21:01:18.807181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-07-08T21:01:18.805986" elapsed="0.001292"/>
</kw>
<arg>${TEST_PET_DOG['id']}</arg>
<status status="PASS" start="2025-07-08T21:01:18.614054" elapsed="0.193371"/>
</kw>
<status status="PASS" start="2025-07-08T21:01:18.613357" elapsed="0.194938"/>
</test>
<test id="s1-t10" name="TC004 - Delete Pet" line="90">
<kw name="Delete Pet" owner="petstore_keywords">
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-07-08T21:01:19.004263" level="INFO">DELETE Request : url=https://petstore.swagger.io/v2/pet/12345123452 
 path_url=/v2/pet/12345123452 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-07-08T21:01:19.004404" level="INFO">DELETE Response : url=https://petstore.swagger.io/v2/pet/12345123452 
 status=200, reason=OK 
 headers={'Date': 'Tue, 08 Jul 2025 21:01:19 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT', 'Access-Control-Allow-Headers': 'Content-Type, api_key, Authorization', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body={"code":200,"type":"unknown","message":"12345123452"} 
 </msg>
<msg time="2025-07-08T21:01:19.004624" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>petstore</arg>
<arg>/pet/${pet_id}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-07-08T21:01:18.814306" elapsed="0.190369"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-07-08T21:01:19.006246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-07-08T21:01:19.004931" elapsed="0.001437"/>
</kw>
<arg>${TEST_PET_CAT['id']}</arg>
<status status="PASS" start="2025-07-08T21:01:18.812620" elapsed="0.193888"/>
</kw>
<status status="PASS" start="2025-07-08T21:01:18.811676" elapsed="0.195557"/>
</test>
<status status="PASS" start="2025-07-08T21:01:13.266737" elapsed="5.743900"/>
</suite>
<statistics>
<total>
<stat pass="10" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat name="Petstore Api Tests" id="s1" pass="10" fail="0" skip="0">Petstore Api Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
